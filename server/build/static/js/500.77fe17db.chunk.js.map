{"version":3,"file":"static/js/500.77fe17db.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","components/Input/ToogleInput.js","features/settings/profilesettings/index.js","pages/protected/ProfileSettings.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import { useState } from \"react\"\r\n\r\n\r\nfunction ToogleInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateToogleValue = () => {\r\n        setValue(!value)\r\n        updateFormValue({updateType, value : !value})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label cursor-pointer\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n                <input type=\"checkbox\" className=\"toggle\" checked={value}  onChange={(e) => updateToogleValue()}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToogleInput\r\n","import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\nimport InputText from '../../../components/Input/InputText'\r\nimport TextAreaInput from '../../../components/Input/TextAreaInput'\r\nimport ToogleInput from '../../../components/Input/ToogleInput'\r\nimport { useAuth0, LocalStorageCache } from \"@auth0/auth0-react\"\r\n\r\nfunction ProfileSettings(){\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Call API to update profile settings changes\r\n    const updateProfile = () => {\r\n        dispatch(showNotification({message : \"Profile Updated\", status : 1}))    \r\n    }\r\n\r\n    const updateFormValue = ({updateType, value}) => {\r\n        console.log(updateType)\r\n    }\r\n\r\n    const auth0Cacher = new LocalStorageCache();\r\n    const user = auth0Cacher.get(`@@auth0spajs@@::${process.env.REACT_APP_AUTH0_CLIENT_ID}::@@user@@`).decodedToken.user;\r\n\r\n    console.log(user)\r\n    return(\r\n            <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputText labelTitle=\"Name\" defaultValue={user.name} updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Email Id\" defaultValue={user.email} updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Title\" defaultValue=\"UI/UX Designer\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Place\" defaultValue=\"California\" updateFormValue={updateFormValue}/>\r\n                    <TextAreaInput labelTitle=\"About\" defaultValue=\"Doing what I love, part time traveller\" updateFormValue={updateFormValue}/>\r\n                </div>\r\n                <div className=\"divider\" ></div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputText labelTitle=\"Language\" defaultValue=\"English\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Timezone\" defaultValue=\"IST\" updateFormValue={updateFormValue}/>\r\n                    <ToogleInput updateType=\"syncData\" labelTitle=\"Sync Data\" defaultValue={true} updateFormValue={updateFormValue}/>\r\n                </div>\r\n\r\n                <div className=\"mt-16\"><button className=\"btn btn-primary float-right\" onClick={() => updateProfile()}>Update</button></div>\r\n            </TitleCard>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileSettings","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport ProfileSettings from '../../features/settings/profilesettings'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Settings\"}))\r\n      }, [dispatch])\r\n\r\n\r\n    return(\r\n        <ProfileSettings />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","labelTitle","labelStyle","containerStyle","type","defaultValue","updateFormValue","placeholder","updateType","useState","value","setValue","checked","onChange","e","dispatch","useDispatch","console","log","user","LocalStorageCache","get","process","REACT_APP_AUTH0_CLIENT_ID","decodedToken","TitleCard","InputText","name","email","TextAreaInput","onClick","showNotification","message","status","useEffect","setPageTitle"],"sourceRoot":""}