{"version":3,"file":"static/js/77.6df1cbca.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/leads/index.js","pages/protected/Leads.js","../node_modules/@heroicons/react/24/outline/TrashIcon.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport { openModal } from \"../common/modalSlice\";\r\nimport { deleteLead, getLeadsContent } from \"./leadSlice\";\r\nimport {\r\n  CONFIRMATION_MODAL_CLOSE_TYPES,\r\n  MODAL_BODY_TYPES,\r\n} from \"../../utils/globalConstantUtil\";\r\nimport TrashIcon from \"@heroicons/react/24/outline/TrashIcon\";\r\nimport { showNotification } from \"../common/headerSlice\";\r\n\r\nconst TopSideButtons = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const openAddNewLeadModal = () => {\r\n    dispatch(\r\n      openModal({\r\n        title: \"Add New Lead\",\r\n        bodyType: MODAL_BODY_TYPES.LEAD_ADD_NEW,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"inline-block float-right\">\r\n      <button\r\n        className=\"btn px-6 btn-sm normal-case btn-primary\"\r\n        onClick={() => openAddNewLeadModal()}\r\n      >\r\n        Add New\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Leads() {\r\n  const { leads } = useSelector((state) => state.lead);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeadsContent());\r\n  }, []);\r\n\r\n  const getDummyStatus = (index) => {\r\n    if (index % 5 === 0) return <div className=\"badge\">Not Interested</div>;\r\n    else if (index % 5 === 1)\r\n      return <div className=\"badge badge-primary\">In Progress</div>;\r\n    else if (index % 5 === 2)\r\n      return <div className=\"badge badge-secondary\">Sold</div>;\r\n    else if (index % 5 === 3)\r\n      return <div className=\"badge badge-accent\">Need Followup</div>;\r\n    else return <div className=\"badge badge-ghost\">Open</div>;\r\n  };\r\n\r\n  const deleteCurrentLead = (index) => {\r\n    dispatch(\r\n      openModal({\r\n        title: \"Confirmation\",\r\n        bodyType: MODAL_BODY_TYPES.CONFIRMATION,\r\n        extraObject: {\r\n          message: `Are you sure you want to delete this lead?`,\r\n          type: CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE,\r\n          index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard\r\n        title=\"Current Leads\"\r\n        topMargin=\"mt-2\"\r\n        TopSideButtons={<TopSideButtons />}\r\n      >\r\n        {/* Leads List in table format loaded from slice after api call */}\r\n        <div className=\"overflow-x-auto w-full\">\r\n          <table className=\"table w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email Id</th>\r\n                <th>Created At</th>\r\n                <th>Status</th>\r\n                <th>Assigned To</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {leads && leads.map((l, k) => {\r\n                return (\r\n                  <tr key={k}>\r\n                    <td>\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"avatar\">\r\n                          <div className=\"mask mask-squircle w-12 h-12\">\r\n                            <img src={l.avatar} alt=\"Avatar\" />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"font-bold\">{l.first_name}</div>\r\n                          <div className=\"text-sm opacity-50\">\r\n                            {l.last_name}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>{l.email}</td>\r\n                    <td>\r\n                      {moment(new Date())\r\n                        .add(-5 * (k + 2), \"days\")\r\n                        .format(\"DD MMM YY\")}\r\n                    </td>\r\n                    <td>{getDummyStatus(k)}</td>\r\n                    <td>{l.last_name}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-square btn-ghost\"\r\n                        onClick={() => deleteCurrentLead(k)}\r\n                      >\r\n                        <TrashIcon className=\"w-5\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Leads;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport Leads from '../../features/leads'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Leads\"}))\r\n      }, [dispatch])\r\n\r\n\r\n    return(\r\n        <Leads />\r\n    )\r\n}\r\n\r\nexport default InternalPage","const React = require(\"react\");\n\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nmodule.exports = ForwardRef;"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","dispatch","useDispatch","onClick","openModal","bodyType","MODAL_BODY_TYPES","leads","useSelector","state","lead","useEffect","getLeadsContent","TitleCard","map","l","k","src","avatar","alt","first_name","last_name","email","moment","Date","add","format","index","extraObject","message","type","CONFIRMATION_MODAL_CLOSE_TYPES","deleteCurrentLead","setPageTitle","React","require","ForwardRef","forwardRef","svgRef","titleId","props","createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}